<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<module xmlns="urn:jboss:module:1.9" name="org.wildfly.extension.ai.injection">

    <properties>
        <property name="jboss.api" value="private"/>
    </properties>

    <resources>
        <artifact name="${org.wildfly.generative-ai:wildfly-ai-injection}"/>
        <artifact name="${dev.langchain4j.cdi:langchain4j-cdi-telemetry}"/>
    </resources>
    <provides>
        <service name="dev.langchain4j.cdi.core.config.spi.LLMConfig">
            <with-class name="org.wildfly.extension.ai.injection.WildFlyLLMConfig"/>
        </service>
    </provides>

    <dependencies>
        <module name="com.azure" optional="true"/>
        <module name="dev.langchain4j"/>
        <module name="dev.langchain4j.cdi"/>
        <module name="dev.langchain4j.chroma" optional="true"/>
        <module name="dev.langchain4j.gemini" optional="true"/>
        <module name="dev.langchain4j.github" optional="true"/>
        <module name="dev.langchain4j.mcp-client" optional="true"/>
        <module name="dev.langchain4j.mistral-ai" optional="true"/>
        <module name="dev.langchain4j.neo4j" optional="true"/>
        <module name="dev.langchain4j.ollama" optional="true"/>
        <module name="dev.langchain4j.openai" optional="true"/>
        <module name="jakarta.enterprise.api"/>
        <module name="jakarta.servlet.api"/>
        <module name="org.jboss.as.controller"/>
        <module name="org.jboss.as.server"/>
        <module name="org.jboss.as.weld.common"/>
        <module name="org.jboss.logging"/>
        <module name="org.jboss.modules"/>
        <module name="org.jboss.weld.core"/>
        <module name="org.wildfly.common"/>
        <!-- OpenTelemetry -->
        <module name="org.wildfly.extension.opentelemetry-api" optional="true"/>
        <module name="io.opentelemetry.api" optional="true"/>
        <module name="io.opentelemetry.api.events" optional="true"/>
        <module name="io.opentelemetry.context" optional="true"/>
        <module name="io.opentelemetry.exporter" optional="true"/>
        <module name="io.opentelemetry.otlp" optional="true"/>
        <module name="io.opentelemetry.sdk" optional="true"/>
        <module name="io.opentelemetry.semconv" optional="true"/>
        <module name="io.smallrye.opentelemetry" optional="true" services="import"/>
    </dependencies>
</module>
